~ Name:
~ ~~~~~
~ run -- Run the application in the current shell
~ 
~ Synopsis:
~ ~~~~~~~~~
~ play run [app_path] [-f] [--deps] [--%fwk_id] [--http[s].port=<value>] [--jpda.port=<value>] [--java_options]
~
~ Description:
~ ~~~~~~~~~~~~
~ Run the application hosted at the app_path directory. If app_path is omitted, the current directory is used.
~ The application is run in the foreground in the current shell. You can then stop it using Ctrl+C.
~
~ The script first tries to locate the java program using the $JAVA_HOME environment variable (from $JAVA_HOME/bin).
~ If the $JAVA_HOME variable is not defined, the default java command available from the PATH is used.
~
~ All options specified after the application path are passed to the JVM (example. -Xms64m -Xmx256m).  
~ If JVM memory options (starting with -Xm') are not specified in command line arguments, then any
~ arguments in the conf/application.conf file's jvm.memory property are passed to the JVM.
~ All the shell environment variables are passed to the JVM.
~
~ If the application is in DEV mode, a JPDA session is automatically opened on the port specified by the 
~ conf/application.conf file's jpda.port property (defaulting to 8000). If the JPDA port is already in use, 
~ another available port is automatically chosen.
~
~ Options:
~ ~~~~~~~~~
~ -f: 
~ Disable the JPDA port checking and force the jpda.port value.
~
~ --%fwk_id:
~ Use this ID to run the application (override the default framework ID)
~
~ --deps: 
~ Resolve and install dependencies before running the command.
~
~ --silent: 
~ Suppress output of the Play ASCII art logo and framework version information.
~
~ --http.port=<value>:
~ Override the http.port and %fwk_id.http.port variables in application.conf, and listen to the specified http port
~
~ --https.port=<value>:
~ Override the https.port and %fwk_id.https.port variables in application.conf, and listen to the specified https port
~
~ --jpda.port=<value>:
~ Override the jpda.port and %fwk_id.jpda.port variables in application.conf. Use the specified port (<value>) as the remote debugging port for the application. Can be combined with the option -f 

Index: src/main/java/org/apache/commons/javaflow/Continuation.java
===================================================================
--- src/main/java/org/apache/commons/javaflow/Continuation.java	(revision 1209105)
+++ src/main/java/org/apache/commons/javaflow/Continuation.java	(working copy)
@@ -42,12 +42,12 @@
     private static final Log log = LogFactory.getLog(Continuation.class);
     private static final long serialVersionUID = 2L;
     
-    private final StackRecorder stackRecorder;
+    public final StackRecorder stackRecorder;
 
     /**
      * Create a new continuation, which continue a previous continuation.
      */
-    private Continuation( final StackRecorder pStackRecorder ) {
+    public Continuation( final StackRecorder pStackRecorder ) {
         stackRecorder = pStackRecorder;
     }
 
Index: src/main/java/org/apache/commons/javaflow/bytecode/transformation/asm/ContinuationMethodAdapter.java
===================================================================
--- src/main/java/org/apache/commons/javaflow/bytecode/transformation/asm/ContinuationMethodAdapter.java	(revision 1209105)
+++ src/main/java/org/apache/commons/javaflow/bytecode/transformation/asm/ContinuationMethodAdapter.java	(working copy)
@@ -276,7 +276,10 @@
             }
 
             mv.visitVarInsn(ALOAD, stackRecorderVar);
-            mv.visitIntInsn(BIPUSH, currentIndex);  // TODO optimize to iconst_0...
+            if(currentIndex >= 128) // if > 127 then it's a SIPUSH, not a BIPUSH...
+                mv.visitIntInsn(SIPUSH, currentIndex);
+            else
+                mv.visitIntInsn(BIPUSH, currentIndex);  // TODO optimize to iconst_0...
             mv.visitMethodInsn(INVOKEVIRTUAL, STACK_RECORDER, "pushInt", "(I)V");
 
             if (currentFrame instanceof MonitoringFrame) {
Index: src/main/java/org/apache/commons/javaflow/bytecode/StackRecorder.java
===================================================================
--- src/main/java/org/apache/commons/javaflow/bytecode/StackRecorder.java	(revision 1209105)
+++ src/main/java/org/apache/commons/javaflow/bytecode/StackRecorder.java	(working copy)
@@ -140,7 +140,7 @@
     /**
      * Bind this stack recorder to running thread.
      */
-    private StackRecorder registerThread() {
+    public StackRecorder registerThread() {
         final StackRecorder old = get();
         threadMap.set(this);
         return old;
@@ -149,7 +149,7 @@
     /**
      * Unbind the current stack recorder to running thread.
      */
-    private void deregisterThread(final StackRecorder old) {
+    public void deregisterThread(final StackRecorder old) {
         threadMap.set(old);
     }
 

<?xml version="1.0" encoding="UTF-8"?>

<project name="play! framework" default="jar" basedir=".">

    <property name="baseversion" value="master" />

    <path id="project.classpath">
        <fileset dir=".">
            <include name="play-*.jar"/>
        </fileset>
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="classpath.test">
        <pathelement location="classes" />
        <pathelement location="test-classes" />
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="lib-test">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="clean" description="clean resources">
        <delete dir="classes" /> 
        <delete dir="dist" />
        <delete dir="tests-results" />
        <delete dir="tests-tmp" />
        <delete file="src/play/version" />
        <delete includeemptydirs="true">
            <fileset dir=".">
                <include name="play-*.jar" />
            </fileset>
            <fileset dir="pym">
                <include name="**/*.pyc"/>
            </fileset>
            <fileset dir="../samples-and-tests">
                <include name="**/test-result/**"/>
                <include name="**/tmp/**"/>
                <include name="**/db/**"/>
                <include name="**/attachments/**"/>
                <include name="**/nbproject/**"/>
                <include name="**/data/**"/>
                <include name="**/logs/**"/>
                <include name="**/i-am-working-here/**"/>
            </fileset> 
        </delete>
        <antcall target="clean-unittest"/>
    </target>

    <target name="version" unless="version">
        <exec executable="git" outputproperty="gitversion" errorproperty="giterror" failonerror="false" failifexecutionfails="false">
            <arg value="describe" />
            <arg value="--always" />
        </exec>
        <condition property="version" value="${baseversion}-${gitversion}" else="${baseversion}-localbuild">
            <equals arg1="" arg2="${giterror}" trim="true" />
        </condition>
        <echo message="Version ${version}"></echo>
    </target>

    <target name="compile" description="compile without cleaning">
        <mkdir dir="classes"/>
        <javac encoding="utf-8" srcdir="src" destdir="classes" debug="true" source="1.6" target="1.6">
            <classpath refid="project.classpath" />
        </javac>
        <copy todir="classes">
            <fileset dir="src">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/play.plugins"/>
            </fileset>
        </copy>
    </target>

    <target name="javadoc" description="Generate the Javadoc" depends="version">
        <delete dir="../documentation/api" />
        <javadoc packagenames="play.*"
               sourcepath="src"
               defaultexcludes="yes"
               destdir="../documentation/api"
               author="false"
               version="true"
               use="true"
               windowtitle="Play! API">
            <classpath refid="project.classpath"/>
            <doctitle><![CDATA[<h1>Play! ${version}</h1>]]></doctitle>
            <bottom><![CDATA[<a href="http://guillaume.bort.fr">Guillaume Bort</a> &amp; <a href="http://www.zenexity.fr">zenexity</a> - Distributed under <a href="http://www.apache.org/licenses/LICENSE-2.0.html">Apache 2 licence</a>, without any warrantly]]></bottom>
            <tag name="todo" scope="all" description="To do:"/>
            <group title="Libs" packages="play.libs.*"/>
            <link offline="false" href="http://java.sun.com/javaee/5/docs/api" />
            <link offline="false" href="http://commons.apache.org/fileupload/apidocs" />
            <link offline="false" href="http://google-gson.googlecode.com/svn/tags/1.2.3/docs/javadocs" />
            <link offline="false" href="https://www.hibernate.org/hib_docs/v3/api" />
            <link offline="false" href="http://www.mchange.com/projects/c3p0/apidocs" />
        </javadoc>
    </target>

    <target name="jar" depends="clean,version,compile,modules" description="create play.jar">
        <echo message="${version}" file="src/play/version" />
        <echo message="${version}" file="classes/play/version" />
        <jar destfile="play-${version}.jar" basedir="classes">
            <manifest>
                <attribute name="Premain-Class" value="play.classloading.HotswapAgent"/>
                <attribute name="Can-Redefine-Classes" value="true" />
                <section name="Play">
                    <attribute name="Specification-Title" value="Play! framework"/>
                    <attribute name="Specification-Version" value="${version}"/>
                    <attribute name="Specification-Vendor" value="zenexity"/>
                </section>
            </manifest>
        </jar>
    </target>

    <target name="support">
        <zip destfile="../support/textmate.zip" comment="Textmate bundle for Play! - ${version}" update="false">
            <zipfileset dir="../support/textmate" includes="**/**" />
        </zip>
    </target>

    <target name="modules">
        <property name="play.path" value="../.."/>
        <ant antfile="build.xml" target="build" dir="../modules/testrunner" />
        <ant antfile="build.xml" target="build" dir="../modules/grizzly" />
        <ant antfile="build.xml" target="build" dir="../modules/docviewer" />
    </target>

    <!-- Netbeans support -->

    <target name="nb-profile-application">
        <property name="application.path" value="" />
        <loadfile property="version" srcFile="src/play/version"/>
        <loadfile property="play.id" srcFile="../id" failonerror="false" quiet="true" />
        <loadproperties srcfile="${application.path}/conf/application.conf" />
        <property name="jpda.port" value="8000" />
        <nbprofiledirect>
            <classpath>
                <pathelement path="${application.path}/conf"/>
                <path refid="project.classpath"/>
            </classpath>
        </nbprofiledirect>
        <java classname="play.server.Server" dir="${basedir}" fork="true" jvm="${profiler.info.jvm}">
            <classpath>
                <pathelement path="${application.path}/conf"/>
                <path refid="project.classpath"/>
            </classpath>
            <sysproperty key="application.path" value="${application.path}" />
            <sysproperty key="play.id" value="${play.id}" />
            <sysproperty key="java.endorsed.dirs" value="${basedir}/endorsed" />
            <sysproperty key="play.debug" value="true" />
            <jvmarg value="-javaagent:${basedir}/play-${version}.jar" />
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.port},server=y,suspend=n"/>
            <jvmarg value="${profiler.info.jvmargs.agent}"/>
            <jvmarg value="${jvm.memory}"/>
        </java>	
    </target>

    <target name="nb-run-application">
        <loadfile property="version" srcFile="src/play/version"/>
        <loadfile property="play.id" srcFile="../id" failonerror="false" quiet="true" />
        <loadproperties srcfile="${application.path}/conf/application.conf" />
        <property name="jpda.port" value="8000" />
        <java classname="play.server.Server" dir="${basedir}" fork="true">
            <classpath>
                <pathelement path="${application.path}/conf"/>
                <fileset dir="${application.path}/lib">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${application.path}/modules">
                    <include name="**/*.jar"/>
                </fileset>
                <path refid="project.classpath"/>
            </classpath>
            <sysproperty key="application.path" value="${application.path}" />
            <sysproperty key="play.id" value="${play.id}" />
            <sysproperty key="java.endorsed.dirs" value="${basedir}/endorsed" />
            <sysproperty key="play.debug" value="true" />
            <jvmarg value="-javaagent:${basedir}/play-${version}.jar" />
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.port},server=y,suspend=n"/>
            <jvmarg value="${jvm.memory}"/>
        </java>	
    </target>

    <target name="nb-debug">
        <loadproperties srcfile="${application.path}/conf/application.conf" />
        <property name="jpda.port" value="8000" />
        <nbjpdaconnect name="${application.name}" address="${jpda.port}" transport="dt_socket" />
    </target>

    <target name="test-application">
        <loadfile property="version" srcFile="src/play/version"/>
        <loadproperties srcfile="${application.path}/conf/application.conf" />
        <property name="jpda.port" value="8000" />
        <java classname="play.server.Server" dir="${basedir}" fork="true">
            <classpath>
                <pathelement path="${application.path}/conf"/>
                <fileset dir="${basedir}/../modules/testrunner/lib">
                    <include name="play-testrunner.jar"/>
                </fileset>
                <fileset dir="${application.path}/lib">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${application.path}/modules">
                    <include name="**/*.jar"/>
                </fileset>
                <path refid="project.classpath"/>
            </classpath>
            <sysproperty key="application.path" value="${application.path}" />
            <sysproperty key="play.id" value="test" />
            <sysproperty key="java.endorsed.dirs" value="${basedir}/endorsed" />
            <sysproperty key="play.debug" value="true" />
            <jvmarg value="-javaagent:${basedir}/play-${version}.jar" />
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.port},server=y,suspend=n"/>
        </java>	
    </target>

    <target name="test-in-nb" depends="test">
         <nbbrowse file="tests-results/html/index.html"/>
    </target>

    <!-- Tests -->

    <target name="compile-tests" depends="compile">
        <javac encoding="utf-8" nowarn="${compile.nowarn}" debug="true" destdir="classes" classpathref="project.classpath" srcdir="tests/src" >
            <include name="**/*.java"/>
        </javac>
    </target>

    <!-- Launch all *Test.java -->

    <target name="test" depends="clean,jar" description="run tests suite">
        <condition property="playExtension" value=".bat">
            <and><os family="windows"/></and>
        </condition>
        <condition property="playExtension" value="">
            <and><os family="unix"/></and>
        </condition>

        <echo message="Testing unittests" />

        <antcall target="unittest" />
        
        <echo message="Testing development lifecycle (wait ...)" />

        <exec executable="python" failonerror="true">
            <arg value="${basedir}/../samples-and-tests/i-am-a-developer/tests.py" />
        </exec>

        <echo message="Using ${basedir}/../play${playExtension}" />

        <antcall target="play-test">
            <param name="testAppPath" value="${basedir}/../samples-and-tests/just-test-cases"/>
        </antcall>

        <antcall target="play-test">
            <param name="testAppPath" value="${basedir}/../samples-and-tests/forum"/>
        </antcall>

        <antcall target="play-test">
            <param name="testAppPath" value="${basedir}/../samples-and-tests/zencontact"/>
        </antcall>

        <antcall target="play-test">
            <param name="testAppPath" value="${basedir}/../samples-and-tests/jobboard"/>
        </antcall>

        <antcall target="play-test">
            <param name="testAppPath" value="${basedir}/../samples-and-tests/yabe"/>
        </antcall>

        <antcall target="test-success" />

    </target>

    <target name="test-success">
        <echo message="*****************" />
        <echo message="All test passed !" />
        <echo message="*****************" />
    </target>

    <target name="check-dependencies-file">
            <available file="${testAppPath}/conf/dependencies.yml" property="dependencies.present"/>
    </target>

    <target name="do-deps" depends="check-dependencies-file" if="dependencies.present">
        <exec executable="${basedir}/../play${playExtension}" failonerror="false" spawn="false">
            <arg value="deps"/>
            <arg value="${testAppPath}"/>
        </exec>
    </target>

    <target name="play-test">
	<antcall target="do-deps">
            <param name="testAppPath" value="${testAppPath}"/>
	</antcall>
        <echo message="play auto-test ${testAppPath} (wait)" />
        <exec executable="${basedir}/../play${playExtension}" failonerror="true">
           <arg value="auto-test"/>
           <arg value="${testAppPath}"/>
	</exec>
        <available file="${testAppPath}/test-result/result.passed" property="${testAppPath}testPassed" />
        <fail message="Last test has failed ! (Check results in file://${testAppPath}/test-result)">
            <condition>
                <not>
                    <isset property="${testAppPath}testPassed"/>
                </not>
            </condition>
        </fail>
    </target>

    <target name="debug-test-single" depends="compile-tests" description="debug a single test">
        <nbjpdastart addressproperty="jpda.address" name="Play! framework" transport="dt_socket">
            <classpath refid="project.classpath"/>
        </nbjpdastart>
        <mkdir dir="tests-results" />
        <mkdir dir="${basedir}/tests-tmp" />
        <junit errorproperty="tests.failed" failureproperty="tests.failed" fork="true" showoutput="true" tempdir="${basedir}/tests-tmp">
            <test name="${testclass}" todir="tests-results" />
            <classpath>
                <pathelement path="classes"/>
                <path refid="project.classpath"/>
            </classpath>
            <formatter type="brief" usefile="false"/>
            <formatter type="xml"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
            <jvmarg value="-javaagent:${basedir}/play-${version}.jar" />
            <sysproperty key="tests-tmp" value="${basedir}/tests-tmp" />
        </junit>
        <delete dir="${basedir}/tests-tmp" />
    </target>

    <target name="test-single" depends="compile-tests" description="run a single test">
        <mkdir dir="tests-results" />
        <mkdir dir="${basedir}/tests-tmp" />
        <junit errorproperty="tests.failed" failureproperty="tests.failed" fork="true" showoutput="true" tempdir="${basedir}/tests-tmp" >
            <test name="${testclass}" todir="tests-results" />
            <classpath>
                <pathelement path="classes"/>
                <path refid="project.classpath"/>
            </classpath>
            <formatter type="brief" usefile="false"/>
            <formatter type="xml"/>
            <jvmarg value="-javaagent:${basedir}/play-${version}.jar" />
            <sysproperty key="tests-tmp" value="${basedir}/tests-tmp" />
        </junit>
        <delete dir="${basedir}/tests-tmp" />
    </target>

    <target name="compile-unittest" depends="compile">
        <mkdir dir="test-classes"/>
        <javac encoding="utf-8" srcdir="test-src" destdir="test-classes" debug="true" source="1.6" target="1.6">
            <classpath refid="classpath.test" />
        </javac>
        <copy todir="test-classes">
            <fileset dir="test-src">
                <include name="**/*.properties"/>
                <include name="**/*.sql"/>
                <include name="**/*.xml"/>
                <include name="**/*.plugins"/>
            </fileset>
        </copy>
    </target>

    <target name="clean-unittest">
        <delete dir="test-classes" />
    </target>

    <target name="unittest" depends="compile-unittest">
        <junit errorproperty="junit.failure" failureproperty="junit.failure">
            <classpath refid="classpath.test" />
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="test-classes" includes="**/*Test.class" />
            </batchtest>
        </junit>
        <fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
    </target>

    <target name="package" depends="clean,version,jar,javadoc">
        <mkdir dir="dist" /> 
        <zip destfile="dist/play-${version}.zip" comment="Play! ${version}" update="false">
            <zipfileset prefix="play-${version}" dir=".." includes="**/*" excludes="**/cobertura.ser,**/*.pyc,hs_err*,.*,.*/*,framework/dist/**,id,play,nbproject/**,**/.bzr/**,**/.git/**,*.bzrignore,support/textmate/**,framework/classes/**,framework/tests-results/**,samples-and-tests/**/test-result,samples-and-tests/**/i-am-working-here,samples-and-tests/**/data,samples-and-tests/**/logs,samples-and-tests/**/tmp,samples-and-tests/**/db,samples-and-tests/**/attachments,modules/**" />
            <zipfileset prefix="play-${version}" dir=".." includes="play" filemode="777" />
            <zipfileset prefix="play-${version}" dir=".." includes="modules/grizzly/**,modules/crud/**,modules/secure/**,modules/docviewer/**,modules/testrunner/**" excludes="**/*.pyc" />
        </zip>
    </target>

</project>
